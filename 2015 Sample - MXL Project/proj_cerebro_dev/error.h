/******************************************
 *  ____    ____   ____  ____   _____     *	
 * |_   \  /   _| |_  _||_  _| |_   _|    *
 *   |   \/   |     \ \  / /     | |      *
 *   | |\  /| |      > `' <      | |   _  *
 *  _| |_\/_| |_   _/ /'`\ \_   _| |__/ | *	
 * |_____||_____| |____||____| |________| *	
 *                                        *	
 ******************************************/
 
/**
 * author: 	Joshua McCready 
 * email:	jmccread@umich.edu
 * date:	08/01/2014
 */

/******************************************************************************
* error.h
*   Central file for error codes generated by functions and tasks as result of 
*   misbehavior. 
*
*  Each task will have set of defined errors and a corresponding task_error 
*  function that will go through a switch case statement to determine if any
*  particular error has occurred. 
*  
*  Additionally other capabilities like i2c, spi, or other more global aspects 
*  of the project may have some error checking capability 
******************************************************************************/
#ifndef __error_h
#define __error_h

/********************************************************************************
*
* Includes
*
 *******************************************************************************/
typedef struct 
{
  // I2C error:
  uint8_t i2c; //0
  uint8_t gyro; //1
  uint8_t acc; //2
  uint8_t adc; //3
  uint8_t mag; //4
  uint8_t iso; //5
  uint8_t ltc; //6
  uint8_t pca; //7
  uint8_t tca; //8
  uint8_t bmp; //9
  uint8_t MEMLEAK;
  uint8_t task; 
  uint8_t i2c_e_msg; 
  uint8_t broke; // if true broken, if false hopefully not 

  uint8_t f_open; 
  uint8_t f_write; 
  uint8_t f_close;

  uint8_t gps_r;

} error_struct;

/********************************************************************************
* 
* Definitions & Macros 
*
 *******************************************************************************/

#endif 